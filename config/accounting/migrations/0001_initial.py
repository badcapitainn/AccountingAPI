# Generated by Django 4.2.7 on 2025-08-04 07:11

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Is Deleted"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Account Number"
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Account Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "balance_type",
                    models.CharField(
                        choices=[("DEBIT", "Debit"), ("CREDIT", "Credit")],
                        max_length=10,
                        verbose_name="Normal Balance",
                    ),
                ),
                (
                    "opening_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Opening Balance",
                    ),
                ),
                (
                    "current_balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        verbose_name="Current Balance",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "is_contra_account",
                    models.BooleanField(
                        default=False, verbose_name="Is Contra Account"
                    ),
                ),
                (
                    "is_bank_account",
                    models.BooleanField(default=False, verbose_name="Is Bank Account"),
                ),
                (
                    "is_cash_account",
                    models.BooleanField(default=False, verbose_name="Is Cash Account"),
                ),
                (
                    "is_reconcilable",
                    models.BooleanField(default=False, verbose_name="Is Reconcilable"),
                ),
                (
                    "allow_posting",
                    models.BooleanField(default=True, verbose_name="Allow Posting"),
                ),
                (
                    "require_reconciliation",
                    models.BooleanField(
                        default=False, verbose_name="Require Reconciliation"
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sort Order"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
            ],
            options={
                "verbose_name": "Account",
                "verbose_name_plural": "Accounts",
                "ordering": ["account_number"],
            },
        ),
        migrations.CreateModel(
            name="AccountType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Account Type Name"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Account Type Code"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "normal_balance",
                    models.CharField(
                        choices=[
                            ("ASSET", "Asset"),
                            ("LIABILITY", "Liability"),
                            ("EQUITY", "Equity"),
                            ("REVENUE", "Revenue"),
                            ("EXPENSE", "Expense"),
                        ],
                        max_length=10,
                        verbose_name="Normal Balance",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Account Type",
                "verbose_name_plural": "Account Types",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="JournalEntry",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Amount",
                    ),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sort Order"),
                ),
            ],
            options={
                "verbose_name": "Journal Entry",
                "verbose_name_plural": "Journal Entries",
                "ordering": ["transaction", "sort_order"],
            },
        ),
        migrations.CreateModel(
            name="ReportTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Template Name"),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("BALANCE_SHEET", "Balance Sheet"),
                            ("INCOME_STATEMENT", "Income Statement"),
                            ("CASH_FLOW", "Cash Flow Statement"),
                            ("TRIAL_BALANCE", "Trial Balance"),
                            ("GENERAL_LEDGER", "General Ledger"),
                            ("ACCOUNT_RECONCILIATION", "Account Reconciliation"),
                            ("CUSTOM", "Custom Report"),
                        ],
                        max_length=50,
                        verbose_name="Report Type",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "template_config",
                    models.JSONField(
                        default=dict, verbose_name="Template Configuration"
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(default=list, verbose_name="Report Parameters"),
                ),
                (
                    "filters",
                    models.JSONField(default=list, verbose_name="Report Filters"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sort Order"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Report Template",
                "verbose_name_plural": "Report Templates",
                "ordering": ["report_type", "sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="TransactionType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="Transaction Type Name",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Transaction Type Code"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Transaction Type",
                "verbose_name_plural": "Transaction Types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Is Deleted"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Transaction Number"
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Reference Number"
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                ("transaction_date", models.DateField(verbose_name="Transaction Date")),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Total Amount",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("POSTED", "Posted"),
                            ("VOIDED", "Voided"),
                            ("DRAFT", "Draft"),
                        ],
                        default="DRAFT",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "is_posted",
                    models.BooleanField(default=False, verbose_name="Is Posted"),
                ),
                (
                    "posted_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Posted Date"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "attachments",
                    models.JSONField(
                        blank=True, default=list, verbose_name="Attachments"
                    ),
                ),
                (
                    "posted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posted_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Posted By",
                    ),
                ),
                (
                    "transaction_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transactions",
                        to="accounting.transactiontype",
                        verbose_name="Transaction Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "ordering": ["-transaction_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReportSchedule",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Schedule Name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("DAILY", "Daily"),
                            ("WEEKLY", "Weekly"),
                            ("MONTHLY", "Monthly"),
                            ("QUARTERLY", "Quarterly"),
                            ("YEARLY", "Yearly"),
                            ("CUSTOM", "Custom"),
                        ],
                        max_length=20,
                        verbose_name="Frequency",
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(default=dict, verbose_name="Report Parameters"),
                ),
                (
                    "filters",
                    models.JSONField(default=dict, verbose_name="Report Filters"),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("PDF", "PDF"),
                            ("EXCEL", "Excel"),
                            ("CSV", "CSV"),
                            ("JSON", "JSON"),
                            ("HTML", "HTML"),
                        ],
                        default="PDF",
                        max_length=10,
                        verbose_name="Output Format",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Start Date")),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="End Date"),
                ),
                (
                    "next_run",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Next Run"
                    ),
                ),
                (
                    "recipients",
                    models.JSONField(default=list, verbose_name="Recipients"),
                ),
                (
                    "email_subject",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Email Subject"
                    ),
                ),
                (
                    "email_message",
                    models.TextField(blank=True, verbose_name="Email Message"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_schedules",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="accounting.reporttemplate",
                        verbose_name="Report Template",
                    ),
                ),
            ],
            options={
                "verbose_name": "Report Schedule",
                "verbose_name_plural": "Report Schedules",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted At"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Is Deleted"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "report_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Report Number"
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Report Name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "parameters",
                    models.JSONField(default=dict, verbose_name="Report Parameters"),
                ),
                (
                    "filters",
                    models.JSONField(default=dict, verbose_name="Report Filters"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("GENERATING", "Generating"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("PDF", "PDF"),
                            ("EXCEL", "Excel"),
                            ("CSV", "CSV"),
                            ("JSON", "JSON"),
                            ("HTML", "HTML"),
                        ],
                        default="PDF",
                        max_length=10,
                        verbose_name="Output Format",
                    ),
                ),
                (
                    "report_data",
                    models.JSONField(default=dict, verbose_name="Report Data"),
                ),
                (
                    "file_path",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="File Path"
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        default=0, verbose_name="File Size (bytes)"
                    ),
                ),
                (
                    "generation_started",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Generation Started"
                    ),
                ),
                (
                    "generation_completed",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Generation Completed"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error Message"),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="generated_reports",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Generated By",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reports",
                        to="accounting.reporttemplate",
                        verbose_name="Report Template",
                    ),
                ),
            ],
            options={
                "verbose_name": "Report",
                "verbose_name_plural": "Reports",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JournalItem",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "debit_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="Debit Amount",
                    ),
                ),
                (
                    "credit_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                        verbose_name="Credit Amount",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="journal_items",
                        to="accounting.account",
                        verbose_name="Account",
                    ),
                ),
                (
                    "journal_entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="accounting.journalentry",
                        verbose_name="Journal Entry",
                    ),
                ),
            ],
            options={
                "verbose_name": "Journal Item",
                "verbose_name_plural": "Journal Items",
                "ordering": ["journal_entry", "created_at"],
            },
        ),
        migrations.AddField(
            model_name="journalentry",
            name="transaction",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="journal_entries",
                to="accounting.transaction",
                verbose_name="Transaction",
            ),
        ),
        migrations.CreateModel(
            name="AccountCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Category Name"),
                ),
                ("code", models.CharField(max_length=10, verbose_name="Category Code")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sort Order"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "account_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="accounting.accounttype",
                        verbose_name="Account Type",
                    ),
                ),
                (
                    "parent_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="accounting.accountcategory",
                        verbose_name="Parent Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account Category",
                "verbose_name_plural": "Account Categories",
                "ordering": ["account_type", "sort_order", "name"],
            },
        ),
        migrations.AddField(
            model_name="account",
            name="account_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="accounts",
                to="accounting.accounttype",
                verbose_name="Account Type",
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="accounts",
                to="accounting.accountcategory",
                verbose_name="Account Category",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_number"], name="accounting__transac_8813b8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_date"], name="accounting__transac_0accd6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["status", "is_posted"], name="accounting__status_ad1e8f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_type"], name="accounting__transac_fcce9c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(
                fields=["report_number"], name="accounting__report__9d640e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(fields=["status"], name="accounting__status_297ced_idx"),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(
                fields=["template", "status"], name="accounting__templat_ed135c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(
                fields=["generated_by"], name="accounting__generat_f9eb52_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="journalitem",
            index=models.Index(
                fields=["account", "journal_entry"],
                name="accounting__account_843a49_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="journalitem",
            index=models.Index(
                fields=["debit_amount", "credit_amount"],
                name="accounting__debit_a_cffaa3_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="accountcategory",
            unique_together={("code", "account_type")},
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["account_number"], name="accounting__account_0a7a77_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["account_type", "is_active"],
                name="accounting__account_8b352f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["category", "is_active"], name="accounting__categor_1764a1_idx"
            ),
        ),
    ]
