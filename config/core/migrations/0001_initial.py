# Generated by Django 4.2.7 on 2025-08-04 06:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Configuration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Configuration Key"
                    ),
                ),
                ("value", models.JSONField(verbose_name="Configuration Value")),
                (
                    "config_type",
                    models.CharField(
                        choices=[
                            ("GENERAL", "General"),
                            ("ACCOUNTING", "Accounting"),
                            ("REPORTING", "Reporting"),
                            ("INTEGRATION", "Integration"),
                            ("SECURITY", "Security"),
                        ],
                        default="GENERAL",
                        max_length=20,
                        verbose_name="Configuration Type",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Configuration",
                "verbose_name_plural": "Configurations",
                "ordering": ["config_type", "key"],
            },
        ),
        migrations.CreateModel(
            name="Tenant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Organization Name"),
                ),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="Slug"),
                ),
                (
                    "domain",
                    models.CharField(blank=True, max_length=200, verbose_name="Domain"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Tenant",
                "verbose_name_plural": "Tenants",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("SYSTEM", "System"),
                            ("USER", "User"),
                            ("ALERT", "Alert"),
                            ("REMINDER", "Reminder"),
                            ("REPORT", "Report"),
                        ],
                        max_length=20,
                        verbose_name="Notification Type",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="MEDIUM",
                        max_length=10,
                        verbose_name="Priority",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Title")),
                ("message", models.TextField(verbose_name="Message")),
                (
                    "data",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Additional Data"
                    ),
                ),
                ("is_read", models.BooleanField(default=False, verbose_name="Is Read")),
                (
                    "read_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Read At"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_read"],
                        name="core_notifi_user_id_cb8f07_idx",
                    ),
                    models.Index(
                        fields=["notification_type", "priority"],
                        name="core_notifi_notific_2ca219_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATE", "Create"),
                            ("UPDATE", "Update"),
                            ("DELETE", "Delete"),
                            ("SOFT_DELETE", "Soft Delete"),
                            ("RESTORE", "Restore"),
                        ],
                        max_length=20,
                        verbose_name="Action",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(max_length=100, verbose_name="Model Name"),
                ),
                (
                    "object_id",
                    models.CharField(max_length=100, verbose_name="Object ID"),
                ),
                (
                    "object_repr",
                    models.CharField(
                        max_length=200, verbose_name="Object Representation"
                    ),
                ),
                (
                    "changes",
                    models.JSONField(blank=True, null=True, verbose_name="Changes"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Timestamp"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["model_name", "object_id"],
                        name="core_auditl_model_n_3fb686_idx",
                    ),
                    models.Index(
                        fields=["user", "timestamp"],
                        name="core_auditl_user_id_7b678c_idx",
                    ),
                    models.Index(
                        fields=["action", "timestamp"],
                        name="core_auditl_action_096de0_idx",
                    ),
                ],
            },
        ),
    ]
